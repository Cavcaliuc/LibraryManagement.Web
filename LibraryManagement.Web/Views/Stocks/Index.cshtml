@using PagedList.Mvc
@model PagedList.IPagedList<LibraryManagement.Web.Models.StockModel>
@{
    ViewBag.Title = "Index";


    <h2>Stocks</h2>
    <p>
        @Html.ActionLink("Create New", "Save")
    </p>

    string currentSort = ViewBag.currentSort;

    <form class="form-inline">
        <div class="form-group">
            <input type="text" name="searchString" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Search..." />
            <input type="text" name="locationString" value="@ViewBag.locationQuery" class="search-text form-control" placeholder="Location..." />
        </div>
        <button type="submit" class="btn btn-info">Search</button>
    </form>
    <br />
    <div class="table-responsive">
        <table class="table table-striped table-condensed table-hover">
            <tr>
                <th>
                    @Html.ActionLink("Title", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.TitleSortParam))
                    @Html.SortIdentifier(currentSort, "title")
                </th>
                <th>
                    @Html.ActionLink("Author", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.AuthorSortParam))
                    @Html.SortIdentifier(currentSort, "author")
                </th>
                <th>
                    @Html.ActionLink("Publisher", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.PublisherSortParam))
                    @Html.SortIdentifier(currentSort, "publisher")
                </th>
                <th>
                    @Html.DisplayName("Year")
                </th>
                <th>
                    @Html.DisplayName("Owner")
                </th>
                <th>
                    @Html.DisplayName("Location")
                </th>
                <th>
                    @Html.DisplayName("Action Type")
                </th>
                <th>
                    @Html.DisplayName("Condition")
                </th>
                <th>
                    @Html.DisplayName("Quantity")
                </th>
                @if (User.IsInRole("Admin") || User.IsInRole("RegularUser"))
                {
                    <th> @Html.DisplayName("Actions") </th>
                }
                @if (User.IsInRole("RegularUser"))
                {
                    <th> @Html.DisplayName("Order") </th>
                }
            </tr>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.AuthorFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.PublisherName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Year)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.OwnerUserName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.LocationFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ActionTypeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ConditionName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>

                        <td>

                            @if (User.IsInRole("Admin") || ViewBag.CurrentUserId == item.OwnerId)
                            {
                                @Html.ActionLink("Edit", "Save", new { id = item.Id }); @Html.DisplayName(" ")
                                @Html.ActionLink("Details", "Details", new { id = item.Id }); @Html.DisplayName(" ")
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id });
                            }
                        </td>

                        <td>
                            @if (User.IsInRole("RegularUser"))
                            {
                                @Html.ActionLink("Order", "Order", new { stockId = item.Id }, new { @class = "btn btn-info" })
                            }
                        </td>

                    </tr>
                }
            </tbody>
        </table>

        @if (Model.PageCount > 1)
        {
            <div class="pager">
                @Html.PagedListPager(Model, page => Url.Action("Index", new
           {
               page,
               sortOrder = ViewBag.currentSort,
               searchString = ViewBag.searchQuery,
               locationString = ViewBag.locationQuery
           }))
                @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
        }
    </div>

}

