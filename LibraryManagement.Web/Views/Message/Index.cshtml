@using LibraryManagement.Web.Models
@using PagedList.Mvc
@model PagedList.IPagedList<Message>
@{
    ViewBag.Title = "Index";

    <h2>Messages</h2>

    string currentSort = ViewBag.currentSort;

    <form class="form-inline">
        <div class="form-group">
            <input type="text" name="searchString" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Search..." />
        </div>
        <button type="submit" class="btn btn-info">Search</button>
    </form>
    <br />
    <div class="table-responsive">
        <table class="table table-striped table-condensed table-hover">
            <tr>
                <th>
                    @Html.ActionLink("Item Title", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.TitleSortParam))
                    @Html.SortIdentifier(currentSort, "title")
                </th>
                <th>
                    @Html.ActionLink("Created date", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.CreatedDateSortParam))
                    @Html.SortIdentifier(currentSort, "createdDate")
                </th>
                <th> @Html.DisplayName("User name") </th>
                <th> @Html.DisplayName("Text") </th>

                @if (User.IsInRole("RegularUser"))
                {
                    <th> @Html.DisplayName("Actions") </th>
                }
            </tr>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Order.Stock.Item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedBy.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text)
                        </td>
                        <td>
                            @if (!item.Seen && item.CreatedBy.Id != ViewBag.CurrentUserId)
                            {
                                @Html.ActionLink("Mark as Seen", "MarkAsSeen", new { id = item.Id })
                                @Html.DisplayName(" ")
                            }
                            @Html.ActionLink("Order Details", "Details", "Order", new { id = item.Order.Id }, null)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @if (Model.PageCount > 1)
        {
            <div class="pager">
                @Html.PagedListPager(Model, page => Url.Action("Index", new
           {
               page,
               sortOrder = ViewBag.currentSort,
               searchString = ViewBag.searchQuery,
               locationString = ViewBag.locationQuery
           }))
                @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
        }
    </div>

}

