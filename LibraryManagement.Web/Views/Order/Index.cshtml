@using LibraryManagement.Web.Models
@using PagedList.Mvc
@model PagedList.IPagedList<OrderModel>
@{
    ViewBag.Title = "Index";


    <h2>My Orders</h2>

    string currentSort = ViewBag.currentSort;

    <form class="form-inline">
        <div class="form-group">
            <input type="text" name="searchString" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Search..." />
        </div>
        <button type="submit" class="btn btn-info">Search</button>
    </form>
    <br />
    <div class="table-responsive">
        <table class="table table-striped table-condensed table-hover">
            <tr>
                <th>
                    @Html.ActionLink("Stock details", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.TitleSortParam))
                    @Html.SortIdentifier(currentSort, "title")
                </th>
                <th>
                    @Html.ActionLink("Order status", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.OrderStatusSortParam))
                    @Html.SortIdentifier(currentSort, "orderStatus")
                </th>
                <th>
                    @Html.DisplayName("Quantity")
                </th>
                <th>
                    @Html.ActionLink("Created date", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.CreatedDateSortParam))
                    @Html.SortIdentifier(currentSort, "createdDate")
                </th>
                <th>
                    @Html.DisplayName("Modified date")
                </th>
                <th>
                    @Html.DisplayName("Modified by")
                </th>

                @if (User.IsInRole("RegularUser"))
                {
                    <th> @Html.DisplayName("Actions") </th>
                }
            </tr>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <div >
                                <dl class="dl-horizontal">
                                    <dt>@Html.DisplayName("Title")</dt>
                                    <dd>@Html.DisplayFor(model => item.Title)</dd>

                                    <dt>@Html.DisplayName("Author")</dt>
                                    <dd>@Html.DisplayFor(model => item.AuthorFullName)</dd>

                                    <dt>@Html.DisplayNameFor(model => item.PublisherName)</dt>
                                    <dd>  @Html.DisplayFor(model => item.PublisherName)</dd>

                                    <dt>@Html.DisplayNameFor(model => item.Year)</dt>
                                    <dd>  @Html.DisplayFor(model => item.Year)</dd>
                       
                                    <dt>
                                        @Html.DisplayNameFor(model => item.OwnerUserName)
                                    </dt>
                                    <dd>@Html.DisplayFor(model => item.OwnerUserName)</dd>

                                    <dt>@Html.DisplayNameFor(model => item.LocationFullName)</dt>
                                    <dd>@Html.DisplayFor(model => item.LocationFullName)</dd>

                                    <dt>@Html.DisplayNameFor(model => item.ActionTypeName)</dt>
                                    <dd>@Html.DisplayFor(model => item.ActionTypeName)</dd>

                                    <dt> @Html.DisplayNameFor(modelItem => item.ConditionName)</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.ConditionName)</dd>
                                </dl>
                            </div>
                        </td>
                        
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderStatusName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderQuantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ModifiedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ModifiedByName)
                        </td>
                        <td>
                            @if (item.OrderStatusName != OrderStatus.Closed && (ViewBag.CurrentUserId == item.OwnerId || ViewBag.CurrentUserId == item.CreatedById))
                            {
                                @Html.ActionLink("Close", "UpdateStatus", new { id = item.Id, orderStatusName = OrderStatus.Closed })
                                ;
                                @Html.DisplayName(" ")
                                @Html.ActionLink("Cancel", "UpdateStatus", new { id = item.Id, orderStatusName = OrderStatus.Canceled })
                                ;
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @if (Model.PageCount > 1)
            {
            <div class="pager">
                @Html.PagedListPager(Model, page => Url.Action("Index", new
           {
               page,
               sortOrder = ViewBag.currentSort,
               searchString = ViewBag.searchQuery,
               locationString = ViewBag.locationQuery
           }))
                @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
        }
    </div>

}
