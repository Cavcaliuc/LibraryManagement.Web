@model LibraryManagement.Web.Models.ManageAccountModel
@{
    ViewBag.Title = "Manage";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Change your account settings</h4>
    @using (Html.BeginForm("Index", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.CountryName, new { @class = "form-control" })
                @Html.HiddenFor(model => model.CountryId)

                @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentLocationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ParentLocationName, new { @class = "form-control" })
                @Html.HiddenFor(model => model.ParentLocationId)

                @Html.ValidationMessageFor(model => model.ParentLocationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.LocationName, new { @class = "form-control" })
                @Html.HiddenFor(model => model.LocationId)

                @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new {type = "date", @placeholder = Model.DateOfBirth,   id = "DateOfBirth", name = "DateOfBirth", min = "1900-01-01", max = "2015-01-01" })

                @Html.ValidationMessageFor(m => m.DateOfBirth)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="fileUpload" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
                @Html.ValidationMessageFor(model => model.Photo)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }


    <dl class="dl-horizontal">
        <dt>Password:</dt>
        <dd>
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Change your password", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Create", "SetPassword")
            }
            ]
        </dd>
        <dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>
        @*
            Phone Numbers can used as a second factor of verification in a two-factor authentication system.

             See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.

             Uncomment the following block after you have set up two-factor authentication
        *@
        <dt>Phone Number:</dt>
        <dd>
            @(Model.PhoneNumber ?? "None") [
            @if (Model.PhoneNumber != null)
            {
                @Html.ActionLink("Change", "AddPhoneNumber")
                @:  | 
                @Html.ActionLink("Remove", "RemovePhoneNumber")
            }
            else
            {
                @Html.ActionLink("Add", "AddPhoneNumber")
            }
            ]
        </dd>
        <dt>Two-Factor Authentication:</dt>
        <dd>
            @if (Model.TwoFactor)
            {
                using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage",
                    FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                    </text>
                }
            }
            else
            {
                using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage",
                    FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                    </text>
                }
            }
        </dd>
    </dl>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />

    <script type="text/javascript">
    $(function () {
        $("#CountryName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetCountries", "Account")',
                        data: "{ 'term': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function(val, item) {
                                return {
                                    label: val.Name,
                                    value: val.Name,
                                    Id: val.Id
                                };
                            }));
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#CountryId").val(i.item.Id);
                    $('#ParentLocationName').val('');
                    $('#ParentLocationId').val('');
                    $('#LocationName').val('');
                    $('#LocationId').val('');
                },
                minLength: 1
            }).focus(function () {
                $(this).autocomplete("search");
            });

        $('#CountryName').change(function () {
            var selectedCountry = $("#CountryId").val();
            var citySelect = $('#ParentLocationId');
            citySelect.empty();
            if (selectedCountry != null && selectedCountry !== '') {
                $("#ParentLocationName").autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("GetCities", "Account")',
                            data: "{ 'countryId': '" + selectedCountry + "','term': '" + request.term + "'}",
                            dataType: "json",
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                response($.map(data, function(val, item) {
                                    return {
                                        label: val.Name,
                                        value: val.Name,
                                        Id: val.Id
                                    };
                                }));
                            },
                            error: function (response) {
                                alert(response.responseText);
                            },
                            failure: function (response) {
                                alert(response.responseText);
                            }
                        });
                    },
                    select: function (e, i) {
                        $("#ParentLocationId").val(i.item.Id);
                        $('#LocationName').val('');
                        $('#LocationId').val('');
                    },
                    minLength: 1
                }).focus(function () {
                    $(this).autocomplete("search");
                });
            }
        });

        $('#ParentLocationName').change(function () {
            var selectedCountry = $("#CountryId").val();
            var selectedCity = $("#ParentLocationId").val();
            $('#LocationId').val('');
            var locationSelect = $('#LocationId');
            locationSelect.empty();
            if (selectedCountry != null && selectedCountry !== '' &&
                selectedCity != null && selectedCity !== '') {
                $("#LocationName").autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("GetLocations", "Account")',
                            data: "{ 'countryId': '" + selectedCountry + "','cityId': '" + selectedCity + "','term': '" + request.term + "'}",
                            dataType: "json",
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                response($.map(data, function(val, item) {
                                    return {
                                        label: val.Name,
                                        value: val.Name,
                                        Id: val.Id
                                    };
                                }));
                            },
                            error: function (response) {
                                alert(response.responseText);
                            },
                            failure: function (response) {
                                alert(response.responseText);
                            }
                        });
                    },
                    select: function (e, i) {
                        $("#LocationId").val(i.item.Id);
                    },
                    minLength: 1
                }).focus(function () {
                    $(this).autocomplete("search");
                });
            }
        });


        });
    </script>
}
